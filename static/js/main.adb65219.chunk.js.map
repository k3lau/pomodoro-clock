{"version":3,"sources":["Component/TimerSetting.elements.js","Util/TimeFormat.js","Component/TimerControl.js","Component/DisplayTimer.js","App.js","reportWebVitals.js","index.js"],"names":["TimerSetting","styled","div","StyledButton","Button","DisplayContainer","props","size","SettingContainer","StyledRow","Layout","TimeFormat","Paragraph","p","displayTimeMMSS","timeSecond","sec","Math","floor","min","padStart","TimerControl","decre","bind","incre","time","this","length","setLength","id","timerType","setTimeLeft","timeLeft","variant","onClick","className","Component","wrapperStyle","position","width","maxWidth","height","timeStyle","display","flexDirection","justifyContent","alignItems","left","top","strokeWidth","rotation","halfSize","halfStrokeWith","arcRadius","arcDiameter","rotationIndicator","pathLength","PI","path","getPathProps","DisplayTimer","clockInterval","setTimeout","buzzer","clearTimeout","timerID","state","currentIndex","timerList","setState","setTimerType","setTimerID","startStop","reset","duration","findIndex","item","status","timerStatus","setTimerStatus","audioBeep","pause","currentTime","_timer","play","start","goal","style","preserveAspectRatio","viewBox","xmlns","d","stroke","strokeLinecap","cx","cy","r","fill","strokeDasharray","strokeDashoffset","timerLabel","preload","ref","audio","src","App","breakLength","sessionLength","order","setBreak","setSession","timers","index","timer","e","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adb65219.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport const TimerSetting = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 200px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  margin: 4px;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 1em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background-color: transparent;\r\n  color: #404040;\r\n  border: 2px solid #404040;\r\n\r\n  &:focus,\r\n  &:active:focus {\r\n    outline: thin dotted;\r\n    outline: 5px auto -webkit-focus-ring-color;\r\n    outline-offset: -2px;\r\n  }\r\n  &:hover,\r\n  &:focus {\r\n    color: #404040;\r\n    text-decoration: none;\r\n  }\r\n  &:active {\r\n    background-image: none;\r\n    outline: 0;\r\n    -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\r\n    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\r\n  }\r\n  &:focus,\r\n  &:hover,\r\n  &:active {\r\n    background-color: #dfdfdf;\r\n    border: 2px solid #ababab;\r\n  }\r\n`;\r\n\r\nexport const DisplayContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: ${(props) => props.size};\r\n  height: ${(props) => props.size};\r\n  padding: 0.2em;\r\n  border-radius: 50%;\r\n  box-shadow: 0.25rem 0.25rem 1.5rem rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const SettingContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.5em 2em 0.5em 2em;\r\n  margin: 0.5em 2em 0.5em 2em;\r\n  border-radius: 0.5em;\r\n  box-shadow: 0.5rem 0.5rem 2.5rem rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const StyledRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Layout = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-width: 300px;\r\n  max-width: 1024px;\r\n  margin: auto;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  font-size: 1em;\r\n`;\r\n\r\nexport const TimeFormat = styled.div`\r\n  font-family: Roboto;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  font-family: Noto Sans;\r\n  font-weight: normal;\r\n  text-align: center;\r\n`;\r\n","export const displayTimeMMSS = (timeSecond) => {\r\n  let sec = Math.floor(timeSecond % 60);\r\n  let min = Math.floor(timeSecond / 60);\r\n  let sMinutes = `${min}`.padStart(2, \"0\");\r\n  let sSeconds = `${sec % 60}`.padStart(2, \"0\");\r\n  return sMinutes + \":\" + sSeconds;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  SettingContainer,\r\n  StyledButton,\r\n  StyledRow,\r\n  TimeFormat,\r\n} from \"./TimerSetting.elements.js\";\r\nimport { displayTimeMMSS } from \"../Util/TimeFormat\";\r\n\r\nexport class TimerControl extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.decre = this.decre.bind(this);\r\n    this.incre = this.incre.bind(this);\r\n  }\r\n\r\n  decre() {\r\n    var time = this.props.length - 60;\r\n    if (time >= 10) {\r\n      this.props.setLength(this.props.id, time);\r\n      if (this.props.timerType === this.props.id) {\r\n        this.props.setTimeLeft(this.props.timeLeft - 60);\r\n      }\r\n    }\r\n  }\r\n\r\n  incre() {\r\n    var time = this.props.length + 60;\r\n    if (time <= 3600) {\r\n      this.props.setLength(this.props.id, time);\r\n      if (this.props.timerType === this.props.id) {\r\n        this.props.setTimeLeft(this.props.timeLeft + 60);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SettingContainer>\r\n        <div id={this.props.id}>{this.props.id}</div>\r\n        <StyledRow>\r\n          <StyledButton variant=\"primary\" onClick={this.decre}>\r\n            <i className=\"fas fa-angle-down fa-sm\"></i>\r\n          </StyledButton>\r\n          <TimeFormat>{`${displayTimeMMSS(this.props.length)}`}</TimeFormat>\r\n          <StyledButton variant=\"primary\" onClick={this.incre}>\r\n            <i className=\"fas fa-angle-up fa-sm\"></i>\r\n          </StyledButton>\r\n        </StyledRow>\r\n      </SettingContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  DisplayContainer,\r\n  StyledButton,\r\n  StyledRow,\r\n  TimerSetting,\r\n  TimeFormat,\r\n} from \"./TimerSetting.elements.js\";\r\nimport { displayTimeMMSS } from \"../Util/TimeFormat.js\";\r\n\r\nconst size = 100;\r\nconst strokeWidth = 4;\r\nconst rotation = \"clockwise\";\r\n\r\nconst wrapperStyle = {\r\n  position: \"relative\",\r\n  width: \"10em\",\r\n  maxWidth: \"100%\",\r\n  height: \"100%\",\r\n};\r\nconst timeStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  position: \"absolute\",\r\n  left: 0,\r\n  top: 0,\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\nconst getPathProps = (size, strokeWidth, rotation) => {\r\n  const halfSize = size / 2;\r\n  const halfStrokeWith = strokeWidth / 2;\r\n  const arcRadius = halfSize - halfStrokeWith;\r\n  const arcDiameter = 2 * arcRadius;\r\n  const rotationIndicator = rotation === \"counterclockwise\" ? \"1,0\" : \"0,1\";\r\n\r\n  const pathLength = 2 * Math.PI * arcRadius;\r\n  const path = `m ${halfSize},${halfStrokeWith}\r\n              a ${arcRadius},${arcRadius} 0 ${rotationIndicator} 0,${arcDiameter}\r\n              a ${arcRadius},${arcRadius} 0 ${rotationIndicator} 0,-${arcDiameter}`;\r\n\r\n  return { path, pathLength };\r\n};\r\nconst { path, pathLength } = getPathProps(size, strokeWidth, rotation);\r\nconst strokeDashoffset = (time, start, goal, duration) => {\r\n  if (duration === 0) {\r\n    return goal;\r\n  }\r\n\r\n  const currentTime = time / duration;\r\n  return start + goal * currentTime;\r\n};\r\n\r\n// const strokeDashoffset = linearEase(elapsedTime, 0, pathLength, duration);\r\n\r\nexport class DisplayTimer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.startStop = this.startStop.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.buzzer = this.buzzer.bind(this);\r\n    this.duration = this.duration.bind(this);\r\n\r\n    this.state = {\r\n      currentIndex: this.props.timerList.findIndex(\r\n        (item) => item.id === this.props.timerType\r\n      ),\r\n    };\r\n  }\r\n\r\n  clockInterval = () => {\r\n    let timeScale = 1;\r\n    let timerID = setTimeout(() => {\r\n      var timeLeft = this.props.timeLeft;\r\n      timeLeft = timeLeft - 1 / timeScale;\r\n      this.props.setTimeLeft(timeLeft);\r\n      this.buzzer(timeLeft);\r\n      if (timeLeft < 0) {\r\n        clearTimeout(this.props.timerID);\r\n        // if (this.props.timerType === \"Session\") {\r\n        //   this.props.setTimerType(\"Break\");\r\n        //   this.props.setTimeLeft(this.props.breakLength);\r\n        // } else {\r\n        //   this.props.setTimerType(\"Session\");\r\n        //   this.props.setTimeLeft(this.props.sessionLength);\r\n        // }\r\n        if (this.state.currentIndex < this.props.timerList.length - 1) {\r\n          this.setState((state) => {\r\n            return { currentIndex: state.currentIndex + 1 };\r\n          });\r\n        } else {\r\n          this.setState({\r\n            currentIndex: 0,\r\n          });\r\n        }\r\n        this.props.setTimerType(\r\n          this.props.timerList[this.state.currentIndex].id\r\n        );\r\n        this.props.setTimeLeft(\r\n          this.props.timerList[this.state.currentIndex].length\r\n        );\r\n      }\r\n      this.props.setTimerID(this.clockInterval());\r\n    }, 1000 / 60);\r\n    return timerID;\r\n  };\r\n\r\n  startStop(e = 0) {\r\n    let status = this.props.timerStatus;\r\n\r\n    if (status === 0) {\r\n      let timerID = this.clockInterval();\r\n      this.props.setTimerID(timerID);\r\n\r\n      this.props.setTimerStatus(1);\r\n    } else {\r\n      clearTimeout(this.props.timerID);\r\n      this.props.setTimerStatus(0);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.props.setLength(\"Break\", 300);\r\n    this.props.setLength(\"Session\", 1500);\r\n    this.props.setTimeLeft(1500);\r\n    this.props.setTimerType(\"Session\");\r\n    clearTimeout(this.props.timerID);\r\n\r\n    this.audioBeep.pause();\r\n    this.audioBeep.currentTime = 0;\r\n    this.props.setTimerStatus(0);\r\n  }\r\n\r\n  timerLabel() {\r\n    return this.props.timerType;\r\n  }\r\n\r\n  duration() {\r\n    return this.props.timerList[this.state.currentIndex].length * 1000;\r\n  }\r\n\r\n  buzzer(_timer) {\r\n    if (_timer <= 0) {\r\n      this.audioBeep.play();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TimerSetting>\r\n        <DisplayContainer size={size}>\r\n          <div style={wrapperStyle}>\r\n            <svg\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              preserveAspectRatio=\"xMinYMin slice\"\r\n              viewBox=\"0 0 100 100\"\r\n              xmlns=\"https://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d={path}\r\n                stroke=\"grey\"\r\n                strokeLinecap=\"round\"\r\n                cx={size / 2}\r\n                cy={size / 2}\r\n                r={size / 2 - 4}\r\n                strokeWidth={strokeWidth}\r\n                fill=\"none\"\r\n              />\r\n              <path\r\n                d={path}\r\n                stroke=\"red\"\r\n                strokeLinecap=\"round\"\r\n                cx={size / 2}\r\n                cy={size / 2}\r\n                r={size / 2 - 4}\r\n                fill=\"none\"\r\n                strokeWidth={strokeWidth}\r\n                strokeDasharray={pathLength}\r\n                strokeDashoffset={strokeDashoffset(\r\n                  this.props.timeLeft * 1000,\r\n                  0,\r\n                  pathLength,\r\n                  this.duration()\r\n                )}\r\n              />\r\n            </svg>\r\n\r\n            <div style={timeStyle}>\r\n              <div id=\"timer-label\">{this.timerLabel()}</div>\r\n              <TimeFormat id=\"time-left\">\r\n                {displayTimeMMSS(this.props.timeLeft)}\r\n              </TimeFormat>\r\n              <StyledRow>\r\n                <StyledButton\r\n                  variant=\"primary\"\r\n                  id=\"start_stop\"\r\n                  onClick={this.startStop}\r\n                >\r\n                  {this.props.timerStatus === 1 ? (\r\n                    <i className=\"fas fa-stop fa-sm\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-play fa-sm\"></i>\r\n                  )}\r\n                </StyledButton>\r\n                <StyledButton variant=\"primary\" id=\"reset\" onClick={this.reset}>\r\n                  <i className=\"fas fa-undo fa-sm\"></i>\r\n                </StyledButton>\r\n              </StyledRow>\r\n            </div>\r\n          </div>\r\n          <audio\r\n            id=\"beep\"\r\n            preload=\"auto\"\r\n            ref={(audio) => {\r\n              this.audioBeep = audio;\r\n            }}\r\n            //src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n            src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/African%20and%20Eastern%20Percussion/80[kb]african-pe-hi.wav.mp3\"\r\n          ></audio>\r\n        </DisplayContainer>\r\n      </TimerSetting>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { TimerControl } from \"./Component/TimerControl\";\r\nimport { DisplayTimer } from \"./Component/DisplayTimer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Layout,\r\n  StyledRow,\r\n  Paragraph,\r\n} from \"./Component/TimerSetting.elements\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      timeLeft: 1500,\r\n      breakLength: 300,\r\n      sessionLength: 1500,\r\n      timerStatus: 0,\r\n      timerType: \"Session\",\r\n      timerID: 0,\r\n      timerList: [\r\n        {\r\n          id: \"Session\",\r\n          order: 1,\r\n          length: 25 * 60,\r\n        },\r\n        {\r\n          id: \"Break\",\r\n          order: 2,\r\n          length: 5 * 60,\r\n        },\r\n        {\r\n          id: \"Long Break\",\r\n          order: 2,\r\n          length: 5 * 60,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.setBreak = this.setBreak.bind(this);\r\n    this.setSession = this.setSession.bind(this);\r\n    this.setTimeLeft = this.setTimeLeft.bind(this);\r\n    this.setTimerStatus = this.setTimerStatus.bind(this);\r\n    this.setTimerType = this.setTimerType.bind(this);\r\n    this.setTimerID = this.setTimerID.bind(this);\r\n    this.setLength = this.setLength.bind(this);\r\n  }\r\n\r\n  setLength(id, time) {\r\n    let timers = [...this.state.timerList];\r\n    let index = timers.findIndex((item) => item.id === id);\r\n    let timer = { ...timers[index] };\r\n    timer.length = time;\r\n    timers[index] = timer;\r\n    this.setState({\r\n      timerList: timers,\r\n    });\r\n  }\r\n\r\n  setBreak(e) {\r\n    this.setState({\r\n      breakLength: e,\r\n    });\r\n  }\r\n\r\n  setSession(e) {\r\n    this.setState({\r\n      sessionLength: e,\r\n    });\r\n  }\r\n\r\n  setTimeLeft(e) {\r\n    this.setState((state, props) => ({\r\n      timeLeft: e,\r\n    }));\r\n  }\r\n\r\n  setTimerStatus(e) {\r\n    this.setState({\r\n      timerStatus: e,\r\n    });\r\n  }\r\n\r\n  setTimerType(e) {\r\n    this.setState({\r\n      timerType: e,\r\n    });\r\n  }\r\n\r\n  setTimerID(e) {\r\n    this.setState({\r\n      timerID: e,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h1>Podomoro</h1>\r\n        <Paragraph>- Kiet Lau -</Paragraph>\r\n        <Paragraph>\r\n          Podomoro timer built with ReactJS and styled-component\r\n        </Paragraph>\r\n        <StyledRow>\r\n          <DisplayTimer\r\n            setTimeLeft={this.setTimeLeft}\r\n            setLength={this.setLength}\r\n            setTimerStatus={this.setTimerStatus}\r\n            setTimerType={this.setTimerType}\r\n            setTimerID={this.setTimerID}\r\n            timerList={this.state.timerList}\r\n            timerStatus={this.state.timerStatus}\r\n            timeLeft={this.state.timeLeft}\r\n            timerType={this.state.timerType}\r\n            timerID={this.state.timerID}\r\n          ></DisplayTimer>\r\n        </StyledRow>\r\n        <StyledRow>\r\n          {this.state.timerList.map((item) => (\r\n            <TimerControl\r\n              key={item.id}\r\n              id={item.id}\r\n              length={item.length}\r\n              setLength={this.setLength}\r\n              setTimeLeft={this.setTimeLeft}\r\n              breakLength={this.state.breakLength}\r\n              timeLeft={this.state.timeLeft}\r\n              timerType={this.state.timerType}\r\n            ></TimerControl>\r\n          ))}\r\n        </StyledRow>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <script src=\"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\"></script>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}