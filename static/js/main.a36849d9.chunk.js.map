{"version":3,"sources":["Component/TimerSetting.elements.js","Util/TimeFormat.js","Component/TimerControl.js","Component/DisplayTimer.js","Component/AddSetting.js","App.js","reportWebVitals.js","index.js"],"names":["StyledInputMask","styled","DragDropContext","Droppable","InputMask","StyledButton","div","props","size","Button","variant","DisplayContainer","SettingContainer","bgColor","ButtonContainer","StyledRow","Layout","TimeFormat","Paragraph","p","SettingWrapper","DisplayWrapper","GridContainer","StyledFormControl","FormControl","displayTimeMMSS","timeSecond","sec","Math","floor","min","padStart","TimerControl","state","name","time","decre","bind","incre","saveItem","handleEdit","handleNameChange","handleTimeChange","isCurrent","deleteItem","this","item","order","timerType","e","setState","target","value","setEdit","secs","strTime","length","map","val","join","items","timerList","index","findIndex","id","splice","newItem","setTimerList","split","str1","str2","val1","Number","val2","isNaN","getSecondsFromHHMMSS","edit","setTimerItem","setTimerType","setTimeLeft","clearTimeout","timerID","setTimerStatus","setLength","timeLeft","layout","type","onChange","onClick","className","mask","Component","wrapperStyle","position","width","timeStyle","display","flexDirection","justifyContent","alignItems","left","top","height","strokeWidth","rotation","halfSize","halfStrokeWith","arcRadius","arcDiameter","rotationIndicator","pathLength","PI","path","getPathProps","DisplayTimer","clockInterval","setTimeout","buzzer","nextIndex","setTimerID","startStop","reset","duration","currentIndex","status","timerStatus","Array","from","audioBeep","pause","currentTime","find","_timer","play","start","goal","style","preserveAspectRatio","viewBox","xmlns","d","stroke","strokeLinecap","cx","cy","r","fill","strokeDasharray","strokeDashoffset","timerLabel","preload","ref","audio","src","AddSetting","handleOnclick","icon","label","App","defaultTimerList","uniqueId","breakLength","sessionLength","addStatus","setBreak","setSession","onDragEnd","addTimer","resetTimerSetting","JSON","parse","localStorage","getItem","defaultNewSetting","newList","setItem","stringify","clear","timers","x","newTimer","modifiedItem","newBoxState","timer","result","source","destination","reorderedItem","droppableId","direction","provided","droppableProps","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gXAcaA,GARwBC,YAAOC,IAAPD,CAAH,8BAIHA,YAAOE,IAAPF,CAAH,8BAIGA,YAAOG,IAAPH,CAAH,yLAqBfI,GAVeJ,IAAOK,IAAV,6KAMb,SAACC,GAAD,OAAWA,EAAMC,QAIDP,YAAOQ,IAAPR,CAAH,83BAEd,SAACM,GAAD,OACY,YAAlBA,EAAMG,QAAyB,QACb,YAAlBH,EAAMG,SAAyB,WAChC,WACQ,SAACH,GAAD,OACW,YAAlBA,EAAMG,QAAyB,QACb,YAAlBH,EAAMG,SAAyB,UAChC,WACe,SAACH,GAAD,MACI,YAAlBA,EAAMG,QAAyB,SAAa,SACrC,SAACH,GAAD,MACW,YAAlBA,EAAMG,QAAyB,cAAkB,aACzC,SAACH,GAAD,MACU,YAAlBA,EAAMG,QAAyB,iBAAqB,gBAQ7C,SAACH,GAAD,OACW,YAAlBA,EAAMG,QAAyB,YACb,YAAlBH,EAAMG,SAAyB,QAChC,uBA0BW,SAACH,GAAD,OACU,YAAlBA,EAAMG,QAAyB,UACb,YAAlBH,EAAMG,SAAyB,mBAChC,aACQ,SAACH,GAAD,MAA6B,YAAlBA,EAAMG,SAAyB,cAI3CC,EAAmBV,IAAOK,IAAV,qPAWhBM,EAAmBX,IAAOK,IAAV,ySASP,SAACC,GAAD,OAAWA,EAAMM,SAAW,iBAGrCC,EAAkBb,YAAOQ,IAAPR,CAAH,w8BA+Cfc,EAAYd,IAAOK,IAAV,kHAOTU,EAASf,IAAOK,IAAV,wRAeNW,EAAahB,IAAOK,IAAV,oDAIVY,EAAYjB,IAAOkB,EAAV,sGAMTC,EAAiBnB,IAAOK,IAAV,mKASde,EAAiBpB,IAAOK,IAAV,6DAIdgB,EAAgBrB,IAAOK,IAAV,0OAYbiB,EAAoBtB,YAAOuB,IAAPvB,CAAH,wHC9NjBwB,EAAkB,SAACC,GAC9B,IAAIC,EAAMC,KAAKC,MAAMH,EAAa,IAC9BI,EAAMF,KAAKC,MAAMH,EAAa,IAGlC,MAFe,UAAGI,GAAMC,SAAS,EAAG,KAElB,IADH,UAAGJ,EAAM,IAAKI,SAAS,EAAG,M,OCQ9BC,EAAb,kDACE,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,MAAQ,CACXC,KAAM,GACNC,KAAM,SAER,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBAChB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACxB,EAAKK,iBAAmB,EAAKA,iBAAiBL,KAAtB,gBACxB,EAAKM,UAAY,EAAKA,UAAUN,KAAf,gBACjB,EAAKO,WAAa,EAAKA,WAAWP,KAAhB,gBAbD,EADrB,6CAiBE,WACE,GAAIQ,KAAKtC,MAAMuC,KAAKC,QAAUF,KAAKtC,MAAMyC,UACvC,OAAO,IAnBb,8BAuBE,SAAiBC,GACfJ,KAAKK,SAAS,CAAEhB,KAAMe,EAAEE,OAAOC,UAxBnC,8BA2BE,SAAiBH,GACfJ,KAAKK,SAAS,CAAEf,KAAMc,EAAEE,OAAOC,UA5BnC,wBA+BE,SAAWH,GACTJ,KAAKtC,MAAM8C,QAAQR,KAAKtC,MAAMuC,MAC9B,IDlB4BQ,ECkBtBC,GDlBsBD,ECkBIT,KAAKtC,MAAMuC,KAAKU,ODd3C,CAHS5B,KAAKC,MAAMyB,EAAO,IAClBA,EAAO,IAGpBG,KAAI,SAACC,GAAD,OAAUA,EAAM,GAAN,WAAeA,GAAQA,KAAMC,KAAK,MCcjDd,KAAKK,SAAS,CACZhB,KAAMW,KAAKtC,MAAMuC,KAAKZ,KACtBC,KAAMoB,MApCZ,wBAwCE,WAAc,IAAD,OACPK,EAAK,YAAOf,KAAKtC,MAAMsD,WAC3B,GAAID,EAAMJ,OAAS,EAAG,CACpB,IAAMM,EAAQF,EAAMG,WAAU,SAACjB,GAAD,OAAUA,EAAKkB,KAAO,EAAKzD,MAAMuC,KAAKkB,OACrD,IAAXF,IACFF,EAAMK,OAAOH,EAAM,GACnBF,EAAQA,EAAMH,KAAI,SAACX,EAAMgB,GACvB,IAAMI,EAAO,eAAOpB,GAEpB,OADAoB,EAAQnB,MAAQe,EAAQ,EACjBI,KAETrB,KAAKtC,MAAM4D,aAAaP,OAnDhC,sBAwDE,WACE,IAAIM,EAAO,eAAQrB,KAAKtC,MAAMuC,MACxBQ,ED9D0B,SAACF,GAAW,IAAD,EACxBA,EAAMgB,MAAM,KADY,mBACtCC,EADsC,KAChCC,EADgC,KAGvCC,EAAOC,OAAOH,GACdI,EAAOD,OAAOF,GAEpB,OAAKI,MAAMH,IAASG,MAAMD,GAEjBF,EAGJG,MAAMH,IAAUG,MAAMD,GAKpB,EAHS,GAAPF,EAAYE,ECiDNE,CAAqB9B,KAAKZ,MAAME,MAEhC,IAATmB,GACFY,EAAQhC,KAAOW,KAAKZ,MAAMC,KAC1BgC,EAAQV,OAASF,EACjBY,EAAQU,MAAO,EACf/B,KAAKtC,MAAMsE,aAAaX,KAExBA,EAAQhC,KAAOW,KAAKZ,MAAMC,KAC1BgC,EAAQU,MAAO,EACf/B,KAAKtC,MAAMsE,aAAaX,IAI1BrB,KAAKtC,MAAMuE,aAAa,GACpBjC,KAAKtC,MAAMuC,KAAKkB,KAAOnB,KAAKtC,MAAMsD,UAAU,GAAGG,GACjDnB,KAAKtC,MAAMwE,YAAYb,EAAQV,QAEjCX,KAAKtC,MAAMwE,YAAYlC,KAAKtC,MAAMsD,UAAU,GAAGL,QAE/CwB,aAAanC,KAAKtC,MAAM0E,SACxBpC,KAAKtC,MAAM2E,eAAe,KA/E9B,mBAkFE,WACE,IAAI/C,EAAOU,KAAKtC,MAAMuC,KAAKU,OAAS,GAChCrB,GAAQ,KACVU,KAAKtC,MAAM4E,UAAUtC,KAAKtC,MAAMuC,KAAKkB,GAAI7B,GACrCU,KAAKF,aACPE,KAAKtC,MAAMwE,YAAYlC,KAAKtC,MAAM6E,SAAW,OAvFrD,mBA4FE,WACE,IAAIjD,EAAOU,KAAKtC,MAAMuC,KAAKU,OAAS,GAChCrB,GAAQ,OACVU,KAAKtC,MAAM4E,UAAUtC,KAAKtC,MAAMuC,KAAKkB,GAAI7B,GACrCU,KAAKF,aACPE,KAAKtC,MAAMwE,YAAYlC,KAAKtC,MAAM6E,SAAW,OAjGrD,oBAsGE,WAAU,IAAD,OACP,OACE,cAACxE,EAAD,CACEC,QAAS,kBAAO,EAAK8B,YAAc,UAAY,eADjD,SAGIE,KAAKtC,MAAMuC,KAAK8B,KAkBhB,eAACtD,EAAD,CAAe+D,OAAO,OAAtB,UACE,cAAC9D,EAAD,CACE+D,KAAK,OACLlC,MAAOP,KAAKZ,MAAMC,KAClBqD,SAAU1C,KAAKJ,mBAEjB,cAACpC,EAAD,CAAcK,QAAQ,QAAQ8E,QAAS3C,KAAKT,MAA5C,SACE,mBAAGqD,UAAU,8BAEf,cAACzF,EAAD,CACEsF,KAAK,OACLlC,MAAOP,KAAKZ,MAAME,KAClBoD,SAAU1C,KAAKH,iBACfgD,KAAK,UAEP,cAACrF,EAAD,CAAcK,QAAQ,QAAQ8E,QAAS3C,KAAKP,MAA5C,SACE,mBAAGmD,UAAU,4BAEf,eAAC1E,EAAD,WACE,cAACV,EAAD,CAAcK,QAAQ,UAAU8E,QAAS3C,KAAKN,SAA9C,SACE,mBAAGkD,UAAU,wBAEf,cAACpF,EAAD,CAAcK,QAAQ,UAAU8E,QAAS3C,KAAKD,WAA9C,SACE,mBAAG6C,UAAU,yBAEf,cAACpF,EAAD,CAAcK,QAAQ,UAAU8E,QAAS3C,KAAKL,WAA9C,SACE,mBAAGiD,UAAU,+BA3CnB,eAACnE,EAAD,WACE,8BAAMuB,KAAKtC,MAAMuC,KAAKZ,OACtB,cAAC7B,EAAD,CAAcK,QAAQ,QAAQ8E,QAAS3C,KAAKT,MAA5C,SACE,mBAAGqD,UAAU,8BAEf,eAACxE,EAAD,qBACMQ,EAAgBoB,KAAKtC,MAAMuC,KAAKU,SAAW,OAEjD,cAACnD,EAAD,CAAcK,QAAQ,QAAQ8E,QAAS3C,KAAKP,MAA5C,SACE,mBAAGmD,UAAU,4BAGf,cAACpF,EAAD,CAAcK,QAAQ,UAAU8E,QAAS3C,KAAKL,WAA9C,SACE,mBAAGiD,UAAU,iCAzH3B,GAAkCE,aCH5BnF,GAAO,IAIPoF,GAAe,CACnBC,SAAU,WACVC,MAAO,QAEHC,GAAY,CAChBC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZN,SAAU,WACVO,KAAM,EACNC,IAAK,EACLP,MAAO,OACPQ,OAAQ,Q,GAEW,SAAC9F,EAAM+F,EAAaC,GACvC,IAAMC,EAAWjG,EAAO,EAClBkG,EAAiBH,EAAc,EAC/BI,EAAYF,EAAWC,EACvBE,EAAc,EAAID,EAClBE,EAAiC,qBAAbL,EAAkC,MAAQ,MAE9DM,EAAa,EAAIlF,KAAKmF,GAAKJ,EAKjC,MAAO,CAAEK,KAJC,YAAQP,EAAR,YAAoBC,EAApB,6BACMC,EADN,YACmBA,EADnB,cACkCE,EADlC,cACyDD,EADzD,6BAEMD,EAFN,YAEmBA,EAFnB,cAEkCE,EAFlC,eAE0DD,GAErDE,cAEYG,CAAazG,GAhCtB,EACH,aA+BTwG,G,GAAAA,KAAMF,G,GAAAA,WAcDI,GAAb,kDACE,WAAY3G,GAAQ,IAAD,8BACjB,cAAMA,IAkBR4G,cAAgB,WAyBd,OAvBcC,YAAW,WACvB,IAAIhC,EAAW,EAAK7E,MAAM6E,SAI1B,GAHAA,GAAsB,EAHR,GAId,EAAK7E,MAAMwE,YAAYK,GACvB,EAAKiC,OAAOjC,GACRA,EAAW,EAAG,CAChBJ,aAAa,EAAKzE,MAAM0E,SACxB,IAAIqC,EAAY,EAEdA,EADE,EAAK/G,MAAMyC,UAAY,EAAKzC,MAAMsD,UAAUL,OAClC,EAAKjD,MAAMyC,UAAY,EAEvB,EAGd,EAAKzC,MAAMuE,aACTwC,GAEF,EAAK/G,MAAMwE,YACT,EAAKxE,MAAMsD,UAAUyD,EAAU,GAAG9D,QAGtC,EAAKjD,MAAMgH,WAAW,EAAKJ,mBAC1B,IAAO,KAxCV,EAAKK,UAAY,EAAKA,UAAUnF,KAAf,gBACjB,EAAKoF,MAAQ,EAAKA,MAAMpF,KAAX,gBACb,EAAKgF,OAAS,EAAKA,OAAOhF,KAAZ,gBACd,EAAKqF,SAAW,EAAKA,SAASrF,KAAd,gBAEhB,EAAKJ,MAAQ,CACX0F,aAAc,GATC,EADrB,qDAcE,WACE9E,KAAKK,SAAS,CACZyE,aAAc9E,KAAKtC,MAAMyC,cAhB/B,uBAgDE,WAAkB,IACZ4E,EAAS/E,KAAKtC,MAAMsH,YAExB,GAAe,IAAXD,EAAc,CAChB,IAAI3C,EAAUpC,KAAKsE,gBACnBtE,KAAKtC,MAAMgH,WAAWtC,GAEtBpC,KAAKtC,MAAM2E,eAAe,QAE1BF,aAAanC,KAAKtC,MAAM0E,SACxBpC,KAAKtC,MAAM2E,eAAe,KA1DhC,mBA8DE,WACErC,KAAKtC,MAAMuE,aAAa,GACxBE,aAAanC,KAAKtC,MAAM0E,SACxB,IAAIrB,EAAQkE,MAAMC,KAAKlF,KAAKtC,MAAMsD,WAClCD,EAAQA,EAAMH,KAAI,SAACX,EAAMgB,GACvB,IAAMI,EAAO,eAAQpB,GAErB,OADAoB,EAAQnB,MAAQe,EAAQ,EACjBI,KAETrB,KAAKtC,MAAM4D,aAAaP,GACxBf,KAAKtC,MAAMwE,YAAYnB,EAAM,GAAGJ,QAEhCX,KAAKmF,UAAUC,QACfpF,KAAKmF,UAAUE,YAAc,EAC7BrF,KAAKtC,MAAM2E,eAAe,KA5E9B,wBA+EE,WAAc,IAAD,OAQX,OAPY,YAAOrC,KAAKtC,MAAMsD,WACTsE,MAAK,SAACrF,GACzB,OAAIA,EAAKC,QAAU,EAAKxC,MAAMyC,UACrBF,EAEF,QAEIZ,OAvFjB,sBA0FE,WAAY,IAAD,OAUT,OAAuB,IATX,YAAOW,KAAKtC,MAAMsD,WAERsE,MAAK,SAACrF,GAC1B,OAAIA,EAAKC,QAAU,EAAKxC,MAAMyC,UACrBF,EAEF,QAGKU,SApGlB,oBAuGE,SAAO4E,GACDA,GAAU,GACZvF,KAAKmF,UAAUK,SAzGrB,oBA6GE,WAAU,IA1HclG,EAAMmG,EAAOC,EAAMb,EA0HlC,OACP,OACE,eAAC/G,EAAD,CAAkBH,KAAMA,GAAxB,UACE,sBAAKgI,MAAO5C,GAAZ,UACE,sBACEE,MAAM,OACNQ,OAAO,OACPmC,oBAAoB,iBACpBC,QAAQ,cACRC,MAAM,8BALR,UAOE,sBACEC,EAAG5B,GACH6B,OAAO,OACPC,cAAc,QACdC,GAAIvI,GACJwI,GAAIxI,GACJyI,EAAGzI,GACH+F,YA7KM,EA8KN2C,KAAK,SAEP,sBACEN,EAAG5B,GACH6B,OAAO,MACPC,cAAc,QACdC,GAAIvI,GACJwI,GAAIxI,GACJyI,EAAGzI,GACH0I,KAAK,OACL3C,YAxLM,EAyLN4C,gBAAiBrC,GACjBsC,kBAzJYjH,EA0JY,IAAtBU,KAAKtC,MAAM6E,SA1JKkD,EA2JhB,EA3JuBC,EA4JvBzB,GA5J6BY,EA6J7B7E,KAAK6E,WA3JF,IAAbA,EACKa,EAKFD,EAAQC,GAFKpG,EAAOuF,SA4JnB,sBAAKc,MAAOzC,GAAZ,UACE,qBAAK/B,GAAG,cAAR,SAAuBnB,KAAKwG,eAC5B,cAACpI,EAAD,CAAY+C,GAAG,YAAf,SACGvC,EAAgBoB,KAAKtC,MAAM6E,YAE9B,eAACrE,EAAD,WACE,cAACV,EAAD,CACEK,QAAQ,UACRsD,GAAG,aACHwB,QAAS3C,KAAK2E,UAHhB,SAK8B,IAA3B3E,KAAKtC,MAAMsH,YACV,mBAAGpC,UAAU,sBAEb,mBAAGA,UAAU,wBAGjB,cAACpF,EAAD,CAAcK,QAAQ,UAAUsD,GAAG,QAAQwB,QAAS3C,KAAK4E,MAAzD,SACE,mBAAGhC,UAAU,iCAKrB,uBACEzB,GAAG,OACHsF,QAAQ,OACRC,IAAK,SAACC,GACJ,EAAKxB,UAAYwB,GAGnBC,IAAI,yIAnLd,GAAkC9D,aCzCnB+D,GAVI,SAACnJ,GAClB,OACE,eAACO,EAAD,CAAiB0E,QAASjF,EAAMoJ,cAAhC,UACE,mBAAGlE,UAAWlF,EAAMqJ,OACpB,8BAAMrJ,EAAMsJ,Y,4BCOGC,G,kDACnB,WAAYvJ,GAAQ,IAAD,8BACjB,cAAMA,IAEDwJ,iBAAmB,CACtB,CACE/F,GAAIgG,KAAS,OACb9H,KAAM,UACNa,MAAO,EACPS,OAAQ,KACRoB,MAAM,GAER,CACEZ,GAAIgG,KAAS,OACb9H,KAAM,QACNa,MAAO,EACPS,OAAQ,IACRoB,MAAM,IAIV,EAAK3C,MAAQ,CACXmD,SAAU,KACV6E,YAAa,IACbC,cAAe,KACfrC,YAAa,EACb7E,UAAW,EACXiC,QAAS,EACTpB,UAAW,EAAKkG,iBAChBI,UAAW,GAGb,EAAKC,SAAW,EAAKA,SAAS/H,KAAd,gBAChB,EAAKgI,WAAa,EAAKA,WAAWhI,KAAhB,gBAClB,EAAK0C,YAAc,EAAKA,YAAY1C,KAAjB,gBACnB,EAAK6C,eAAiB,EAAKA,eAAe7C,KAApB,gBACtB,EAAKyC,aAAe,EAAKA,aAAazC,KAAlB,gBACpB,EAAKkF,WAAa,EAAKA,WAAWlF,KAAhB,gBAClB,EAAK8C,UAAY,EAAKA,UAAU9C,KAAf,gBACjB,EAAK8B,aAAe,EAAKA,aAAa9B,KAAlB,gBACpB,EAAKiI,UAAY,EAAKA,UAAUjI,KAAf,gBACjB,EAAKwC,aAAe,EAAKA,aAAaxC,KAAlB,gBACpB,EAAKkI,SAAW,EAAKA,SAASlI,KAAd,gBAChB,EAAKgB,QAAU,EAAKA,QAAQhB,KAAb,gBACf,EAAKmI,kBAAoB,EAAKA,kBAAkBnI,KAAvB,gBA3CR,E,qDA+CnB,WACE,IAAIwB,EAAY4G,KAAKC,MAAMC,aAAaC,QAAQ,cAC9B,OAAd/G,IACFA,EAAYhB,KAAKkH,kBAEnBlH,KAAKK,SAAS,CACZkC,SAAUvB,EAAU,GAAGL,OACvBK,UAAWA,M,sBAGf,WACE,IAAIgH,EAAoB,CACtB7G,GAAIgG,KAAS,OACb9H,KAAM,UACNa,MAAOF,KAAKZ,MAAM4B,UAAUL,OAAS,EACrCA,OAAQ,IACRoB,MAAM,GAEFkG,EAAO,sBAAOjI,KAAKZ,MAAM4B,WAAlB,CAA6BgH,IAC1ChI,KAAKK,UAAS,SAACjB,GAAD,MAAY,CACxB4B,UAAWiH,MAEbH,aAAaI,QAAQ,YAAaN,KAAKO,UAAUF,M,+BAGnD,WACE,IAAMjH,EAAYhB,KAAKkH,iBACvBlH,KAAKK,SAAS,CACZkC,SAAUvB,EAAU,GAAGL,OACvBK,UAAWA,IACb8G,aAAaM,U,qBAGf,SAAQnI,GACN,IAAIoI,EAAM,YAAOrI,KAAKZ,MAAM4B,WACxBC,EAAQoH,EAAOnH,WAAU,SAACoH,GAAD,OAAOA,EAAEnH,KAAOlB,EAAKkB,MAC9CoH,EAAQ,eAAQF,EAAOpH,IAC3BsH,EAASxG,MAAQ9B,EAAK8B,KACtBsG,EAAOpH,GAASsH,EAChBvI,KAAKK,SAAS,CACZW,UAAWqH,IAEbP,aAAaI,QAAQ,YAAaN,KAAKO,UAAUE,M,0BAGnD,SAAaG,GACX,IACMC,EADI,YAAOzI,KAAKZ,MAAM4B,WACDJ,KAAI,SAACX,GAI9B,OAHIA,EAAKkB,KAAOqH,EAAarH,KAC3BlB,EAAI,eAAQuI,IAEPvI,KAETD,KAAKK,SAAS,CACZW,UAAWyH,IAEbX,aAAaI,QAAQ,YAAaN,KAAKO,UAAUM,M,uBAGnD,SAAUtH,EAAI7B,GACZ,IAAI+I,EAAM,YAAOrI,KAAKZ,MAAM4B,WACxBC,EAAQoH,EAAOnH,WAAU,SAACjB,GAAD,OAAUA,EAAKkB,KAAOA,KAC/CuH,EAAK,eAAQL,EAAOpH,IACxByH,EAAM/H,OAASrB,EACf+I,EAAOpH,GAASyH,EAChB1I,KAAKK,SAAS,CACZW,UAAWqH,IAEbP,aAAaI,QAAQ,YAAaN,KAAKO,UAAUE,M,sBAGnD,SAASjI,GACPJ,KAAKK,SAAS,CACZ+G,YAAahH,M,0BAIjB,SAAaA,GACXJ,KAAKK,SAAS,CACZW,UAAWZ,IAEb0H,aAAaI,QAAQ,YAAaN,KAAKO,UAAU/H,M,wBAGnD,SAAWA,GACTJ,KAAKK,SAAS,CACZgH,cAAejH,M,yBAInB,SAAYA,GACVJ,KAAKK,UAAS,SAACjB,EAAO1B,GAAR,MAAmB,CAC/B6E,SAAUnC,Q,4BAId,SAAeA,GACbJ,KAAKK,SAAS,CACZ2E,YAAa5E,M,0BAIjB,SAAaA,GACXJ,KAAKK,SAAS,CACZF,UAAWC,M,wBAIf,SAAWA,GACTJ,KAAKK,SAAS,CACZ+B,QAAShC,M,uBAIb,SAAUuI,GAAS,IACTC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YAEhB,GAAKA,EAAL,CAIA,IAAI9H,EAAQkE,MAAMC,KAAKlF,KAAKZ,MAAM4B,WAG9Bd,EAAQ,EACR2I,EAAY5H,MAAQ,IAAMjB,KAAKZ,MAAMe,YACvCD,EAAQ0I,EAAO3H,MAAQ,GAErB2H,EAAO3H,MAAQ,IAAMjB,KAAKZ,MAAMe,YAClCD,EAAQ2I,EAAY5H,MAAQ,GAGhB,IAAVf,GACFF,KAAKK,SAAS,CACZF,UAAWD,IApBC,MAwBQa,EAAMK,OAAOwH,EAAO3H,MAAO,GAA5C6H,EAxBS,oBAyBhB/H,EAAMK,OAAOyH,EAAY5H,MAAO,EAAG6H,GACnC/H,EAAQA,EAAMH,KAAI,SAACX,EAAMgB,GACvB,IAAII,EAAO,eAAOpB,GAEhB,OADFoB,EAAQnB,MAAQe,EAAQ,EACfI,KAGXrB,KAAKK,SAAS,CACZW,UAAWD,IAEb+G,aAAaI,QAAQ,YAAaN,KAAKO,UAAUpH,O,oBAGnD,WAAU,IAAD,OACP,OACE,eAAC5C,EAAD,WACE,cAACD,EAAD,UACE,4CAEF,cAACA,EAAD,UACE,cAACG,EAAD,6BAEF,cAACH,EAAD,UACE,cAACG,EAAD,uEAKF,cAACG,EAAD,UACE,cAAC,GAAD,CACE0D,YAAalC,KAAKkC,YAClBI,UAAWtC,KAAKsC,UAChBD,eAAgBrC,KAAKqC,eACrBJ,aAAcjC,KAAKiC,aACnByC,WAAY1E,KAAK0E,WACjBpD,aAActB,KAAKsB,aACnBN,UAAWhB,KAAKZ,MAAM4B,UACtBgE,YAAahF,KAAKZ,MAAM4F,YACxBzC,SAAUvC,KAAKZ,MAAMmD,SACrBpC,UAAWH,KAAKZ,MAAMe,UACtBiC,QAASpC,KAAKZ,MAAMgD,YAGxB,eAAClE,EAAD,WACE,cAAC,GAAD,CAAY8I,MAAM,cAAcF,cAAe9G,KAAK0H,SAAUX,KAAK,sBACnE,cAAC,GAAD,CAAYC,MAAM,gBAAgBF,cAAe9G,KAAK2H,kBAAmBZ,KAAK,yBAEhF,cAAC7I,EAAD,UACE,cAAC,IAAD,CAAiBuJ,UAAWzH,KAAKyH,UAAjC,SACE,cAAC,IAAD,CAAWsB,YAAY,gBAAgBC,UAAU,WAAjD,SACG,SAACC,GAAD,OACC,eAAC1K,EAAD,2BACM0K,EAASC,gBADf,IAEExC,IAAKuC,EAASE,SAFhB,UAIG,EAAK/J,MAAM4B,UAAUL,OAAS,EAC7B,EAAKvB,MAAM4B,UAAUJ,KAAI,SAACX,EAAMgB,GAAP,OACvB,cAAC,IAAD,CAEEmI,YAAanJ,EAAKkB,GAClBF,MAAOA,EAHT,SAKG,SAACgI,GAAD,OACC,yDACEvC,IAAKuC,EAASE,UACVF,EAASI,gBACTJ,EAASK,iBAHf,aAKE,cAAC,EAAD,CACErJ,KAAMA,EACNiC,YAAa,EAAKA,YAClBI,UAAW,EAAKA,UAChBD,eAAgB,EAAKA,eACrBJ,aAAc,EAAKA,aACnByC,WAAY,EAAKA,WACjBpD,aAAc,EAAKA,aACnBU,aAAc,EAAKA,aACnBhB,UAAW,EAAK5B,MAAM4B,UACtBgE,YAAa,EAAK5F,MAAM4F,YACxBzC,SAAU,EAAKnD,MAAMmD,SACrBpC,UAAW,EAAKf,MAAMe,UACtBiC,QAAS,EAAKhD,MAAMgD,QACpB5B,QAAS,EAAKA,eAxBfP,EAAKkB,OA+Bd,2DAED8H,EAASM,8B,GAtRKzG,aCJlB0G,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,wBAAQvD,IAAI,oEACZ,cAAC,GAAD,OAEFwD,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.a36849d9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport InputMask from 'react-input-mask';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nexport const StyledDragDropContext = styled(DragDropContext)`\r\n\r\n`;\r\n\r\nexport const StyledDroppable = styled(Droppable)`\r\n\r\n`;\r\n\r\nexport const StyledInputMask = styled(InputMask)`\r\n  padding: 0px 4px;\r\n  text-align: center;\r\n  font: inherit;\r\n  font-size: inherit;\r\n  width: 5em;\r\n  height: auto;\r\n  border: 0px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const TimerSetting = styled.div`\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: ${(props) => props.size};\r\n  padding: 20px;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  box-sizing: border-box;\r\n  width: ${(props) =>\r\n    (props.variant === \"primary\" && \"2.5em\") ||\r\n    (props.variant === \"setting\" && \"1.75em\") ||\r\n    \"1.2em\"};\r\n  height: ${(props) =>\r\n    (props.variant === \"primary\" && \"2.5em\") ||\r\n    (props.variant === \"setting\" && \"1.2em\") ||\r\n    \"1.2em\"};\r\n  border-radius: ${(props) =>\r\n    (props.variant === \"setting\" && \"0.1rem\") || \"50%\"};\r\n  margin: ${(props) =>\r\n    (props.variant === \"primary\" && \"0.2em 0.2em\") || \"0px 0px\"};\r\n  padding: ${(props) =>\r\n    (props.variant === \"setting\" && \"0.75rem 0.5rem\") || \"8px 0.5rem\"};\r\n  font-size: 1em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background-color: transparent;\r\n  color: #404040;\r\n  border: ${(props) =>\r\n    (props.variant === \"primary\" && \"2px solid\") ||\r\n    (props.variant === \"setting\" && \"0px\") ||\r\n    \"1px solid #404040\"};\r\n\r\n  &:focus,\r\n  &:active:focus {\r\n    outline: thin dotted;\r\n    outline: 1px auto -webkit-focus-ring-color;\r\n    outline-offset: -2px;\r\n  }\r\n  &:hover,\r\n  &:focus {\r\n    color: #404040;\r\n    text-decoration: none;\r\n  }\r\n  &:active {\r\n    background-image: none;\r\n    outline: 0;\r\n    -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\r\n    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\r\n  }\r\n  &:focus,\r\n  &:hover,\r\n  &:active {\r\n    background-color: #dfdfdf;\r\n    border: 1px solid #ababab;\r\n    outline: 0;\r\n    outline-color: black;\r\n    padding: ${(props) =>\r\n      (props.variant === \"primary\" && \"4px 4px\") ||\r\n      (props.variant === \"setting\" && \"0.69rem 0.5rem\") ||\r\n      \"5px 5px\"};\r\n    margin: ${(props) => props.variant !== \"primary\" && \"0px 0px\"};\r\n  }\r\n`;\r\n\r\nexport const DisplayContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 0 0 150px;\r\n  padding: 0.2em;\r\n  border-radius: 50%;\r\n  box-shadow: 0.25rem 0.25rem 1.5rem rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const SettingContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.5em 1em 0.5em 1em;\r\n  margin: 0.5em 1em 0.5em 1em;\r\n  border-radius: 0.5em;\r\n  box-shadow: 0.1rem 0.1rem 0.5rem rgba(0, 0, 0, 0.6);\r\n  background-color: ${(props) => props.bgColor || \"transparent\"};\r\n`;\r\n\r\nexport const ButtonContainer = styled(Button)`\r\n  width: auto;\r\n  border: 0px;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0.1rem 0.1rem 0.5rem rgba(0, 0, 0, 0.6);\r\n  margin: 0em 0.5em;\r\n  padding: 4px 4px;\r\n  font-size: 1em;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background-color: transparent;\r\n  color: #404040;\r\n\r\n  * {\r\n    padding: 0em 0.25em;\r\n  }\r\n\r\n  &:focus,\r\n  &:active:focus {\r\n    outline: thin dotted;\r\n    outline: 5px auto -webkit-focus-ring-color;\r\n    outline-offset: -2px;\r\n    border-color: #404040;\r\n  }\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #404040;\r\n    text-decoration: none;\r\n  }\r\n  &:active {\r\n    background-image: none;\r\n    outline: 0;\r\n    -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\r\n    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\r\n  }\r\n  &:focus,\r\n  &:hover,\r\n  &:active {\r\n    background-color: #dfdfdf;\r\n    border: 2px solid #ababab;\r\n    padding: 2px 4px;\r\n  }\r\n`;\r\n\r\nexport const StyledRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Layout = styled.div`\r\n  width: 100%;\r\n  max-width: 100vh;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-width: 480px;\r\n  margin: auto;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  font-size: 1em;\r\n`;\r\n\r\nexport const TimeFormat = styled.div`\r\n  font-family: Roboto;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  font-family: Noto Sans;\r\n  font-weight: normal;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SettingWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  padding: 10px 10px;\r\n`;\r\n\r\nexport const DisplayWrapper = styled.div`\r\n  padding: 10px 10px 30px 10px;\r\n`;\r\n\r\nexport const GridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 0.4fr 0.5fr 0.4fr 1fr;\r\n  width: 100%;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n  > * {\r\n    justify-self: center;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nexport const StyledFormControl = styled(FormControl)`\r\n  height: 1.6em;\r\n  padding: 0px;\r\n  margin: 0px;\r\n  text-align: center;\r\n  font: inherit;\r\n`;\r\n","export const displayTimeMMSS = (timeSecond) => {\r\n  let sec = Math.floor(timeSecond % 60);\r\n  let min = Math.floor(timeSecond / 60);\r\n  let sMinutes = `${min}`.padStart(2, \"0\");\r\n  let sSeconds = `${sec % 60}`.padStart(2, \"0\");\r\n  return sMinutes + \":\" + sSeconds;\r\n};\r\n\r\nexport const getSecondsFromHHMMSS = (value) => {\r\n  const [str1, str2] = value.split(\":\");\r\n\r\n  const val1 = Number(str1);\r\n  const val2 = Number(str2);\r\n\r\n  if (!isNaN(val1) && isNaN(val2)) {\r\n  // seconds\r\n    return val1;\r\n  }\r\n\r\n  if (!isNaN(val1) && !isNaN(val2)) {\r\n  // minutes * 60 + seconds\r\n    return val1 * 60 + val2;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nexport const secondsToHHMMSS = (secs) => {\r\n  const minutes = Math.floor(secs / 60);\r\n  const seconds = secs % 60;\r\n\r\n  return [minutes, seconds]\r\n    .map((val) => (val < 10 ? `0${val}` : val)).join(\":\")\r\n    //.filter((val, index) => val !== \"00\" || index > 0).join(\":\");\r\n};","import React, { Component } from \"react\";\r\nimport {\r\n  SettingContainer,\r\n  StyledButton,\r\n  StyledRow,\r\n  StyledFormControl,\r\n  TimeFormat,\r\n  GridContainer,\r\n  StyledInputMask\r\n} from \"./TimerSetting.elements.js\";\r\nimport { displayTimeMMSS, getSecondsFromHHMMSS, secondsToHHMMSS } from \"../Util/TimeFormat\";\r\n\r\nexport class TimerControl extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      time: \"00:00\",\r\n    };\r\n    this.decre = this.decre.bind(this);\r\n    this.incre = this.incre.bind(this);\r\n    this.saveItem = this.saveItem.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleTimeChange = this.handleTimeChange.bind(this);\r\n    this.isCurrent = this.isCurrent.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n  }\r\n\r\n  isCurrent() {\r\n    if (this.props.item.order === this.props.timerType) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  handleNameChange(e) {\r\n    this.setState({ name: e.target.value });\r\n  }\r\n\r\n  handleTimeChange(e) {\r\n    this.setState({ time: e.target.value });\r\n  }\r\n\r\n  handleEdit(e) {\r\n    this.props.setEdit(this.props.item);\r\n    const strTime = secondsToHHMMSS(this.props.item.length);\r\n    this.setState({\r\n      name: this.props.item.name,\r\n      time: strTime,\r\n    });\r\n  }\r\n\r\n  deleteItem() {\r\n    let items = [...this.props.timerList];\r\n    if (items.length > 2) {\r\n      const index = items.findIndex((item) => item.id === this.props.item.id);\r\n      if (index !== -1) {\r\n        items.splice(index,1)\r\n        items = items.map((item, index) => {\r\n          const newItem = {...item};\r\n          newItem.order = index + 1\r\n          return newItem\r\n        });\r\n        this.props.setTimerList(items)\r\n      }\r\n    }\r\n  }\r\n\r\n  saveItem() {\r\n    let newItem = { ...this.props.item };\r\n    const secs = getSecondsFromHHMMSS(this.state.time);\r\n\r\n    if (secs !== 0) {\r\n      newItem.name = this.state.name;\r\n      newItem.length = secs;\r\n      newItem.edit = false;\r\n      this.props.setTimerItem(newItem);\r\n    } else {\r\n      newItem.name = this.state.name;\r\n      newItem.edit = false;\r\n      this.props.setTimerItem(newItem);\r\n    }\r\n    \r\n    //Reset timer to 1\r\n    this.props.setTimerType(1);\r\n    if (this.props.item.id === this.props.timerList[0].id) {\r\n      this.props.setTimeLeft(newItem.length);\r\n    } else {\r\n    this.props.setTimeLeft(this.props.timerList[0].length);\r\n    }\r\n    clearTimeout(this.props.timerID);\r\n    this.props.setTimerStatus(0);\r\n  }\r\n\r\n  decre() {\r\n    var time = this.props.item.length - 60;\r\n    if (time >= 10) {\r\n      this.props.setLength(this.props.item.id, time);\r\n      if (this.isCurrent()) {\r\n        this.props.setTimeLeft(this.props.timeLeft - 60);\r\n      }\r\n    }\r\n  }\r\n\r\n  incre() {\r\n    var time = this.props.item.length + 60;\r\n    if (time <= 3600) {\r\n      this.props.setLength(this.props.item.id, time);\r\n      if (this.isCurrent()) {\r\n        this.props.setTimeLeft(this.props.timeLeft + 60);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SettingContainer\r\n        bgColor={() => (this.isCurrent() ? \"#DF7373\" : \"transparent\")}\r\n      >\r\n        {!this.props.item.edit ? (\r\n          <GridContainer>\r\n            <div>{this.props.item.name}</div>\r\n            <StyledButton variant=\"small\" onClick={this.decre}>\r\n              <i className=\"fas fa-angle-down fa-sm\"></i>\r\n            </StyledButton>\r\n            <TimeFormat>\r\n              {`${displayTimeMMSS(this.props.item.length)}`}{\" \"}\r\n            </TimeFormat>\r\n            <StyledButton variant=\"small\" onClick={this.incre}>\r\n              <i className=\"fas fa-angle-up fa-sm\"></i>\r\n            </StyledButton>\r\n\r\n            <StyledButton variant=\"setting\" onClick={this.handleEdit}>\r\n              <i className=\"fas fa-edit fa-sx\"></i>\r\n            </StyledButton>\r\n          </GridContainer>\r\n        ) : (\r\n          <GridContainer layout=\"edit\">\r\n            <StyledFormControl\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={this.handleNameChange}\r\n            />\r\n            <StyledButton variant=\"small\" onClick={this.decre}>\r\n              <i className=\"fas fa-angle-down fa-sm\"></i>\r\n            </StyledButton>\r\n            <StyledInputMask\r\n              type=\"text\"\r\n              value={this.state.time}\r\n              onChange={this.handleTimeChange}\r\n              mask=\"99:99\"\r\n            />\r\n            <StyledButton variant=\"small\" onClick={this.incre}>\r\n              <i className=\"fas fa-angle-up fa-sm\"></i>\r\n            </StyledButton>\r\n            <StyledRow>\r\n              <StyledButton variant=\"setting\" onClick={this.saveItem}>\r\n                <i className=\"far fa-save fa-sx\"></i>\r\n              </StyledButton>\r\n              <StyledButton variant=\"setting\" onClick={this.deleteItem}>\r\n                <i className=\"fas fa-trash fa-sx\"></i>\r\n              </StyledButton>\r\n              <StyledButton variant=\"setting\" onClick={this.handleEdit}>\r\n                <i className=\"fas fa-times fa-sx\"></i>\r\n              </StyledButton>\r\n            </StyledRow>\r\n          </GridContainer>\r\n        )}\r\n      </SettingContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  DisplayContainer,\r\n  StyledButton,\r\n  StyledRow,\r\n  TimeFormat,\r\n} from \"./TimerSetting.elements.js\";\r\nimport { displayTimeMMSS } from \"../Util/TimeFormat.js\";\r\n\r\nconst size = 100;\r\nconst strokeWidth = 4;\r\nconst rotation = \"clockwise\";\r\n\r\nconst wrapperStyle = {\r\n  position: \"relative\",\r\n  width: \"10em\",\r\n};\r\nconst timeStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  position: \"absolute\",\r\n  left: 0,\r\n  top: 0,\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\nconst getPathProps = (size, strokeWidth, rotation) => {\r\n  const halfSize = size / 2;\r\n  const halfStrokeWith = strokeWidth / 2;\r\n  const arcRadius = halfSize - halfStrokeWith;\r\n  const arcDiameter = 2 * arcRadius;\r\n  const rotationIndicator = rotation === \"counterclockwise\" ? \"1,0\" : \"0,1\";\r\n\r\n  const pathLength = 2 * Math.PI * arcRadius;\r\n  const path = `m ${halfSize},${halfStrokeWith}\r\n              a ${arcRadius},${arcRadius} 0 ${rotationIndicator} 0,${arcDiameter}\r\n              a ${arcRadius},${arcRadius} 0 ${rotationIndicator} 0,-${arcDiameter}`;\r\n\r\n  return { path, pathLength };\r\n};\r\nconst { path, pathLength } = getPathProps(size, strokeWidth, rotation);\r\nconst strokeDashoffset = (time, start, goal, duration) => {\r\n\r\n  if (duration === 0) {\r\n    return goal;\r\n  }\r\n\r\n  const currentTime = time / duration;\r\n\r\n  return start + goal * currentTime;\r\n};\r\n\r\n// const strokeDashoffset = linearEase(elapsedTime, 0, pathLength, duration);\r\n\r\nexport class DisplayTimer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.startStop = this.startStop.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.buzzer = this.buzzer.bind(this);\r\n    this.duration = this.duration.bind(this);\r\n\r\n    this.state = {\r\n      currentIndex: 1\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentIndex: this.props.timerType\r\n    })\r\n  }\r\n\r\n  clockInterval = () => {\r\n    let timeScale = 60;\r\n    let timerID = setTimeout(() => {\r\n      var timeLeft = this.props.timeLeft;\r\n      timeLeft = timeLeft - 1 / timeScale;\r\n      this.props.setTimeLeft(timeLeft);\r\n      this.buzzer(timeLeft);\r\n      if (timeLeft < 0) {\r\n        clearTimeout(this.props.timerID);\r\n        let nextIndex = 0;\r\n        if (this.props.timerType < this.props.timerList.length) {\r\n          nextIndex = this.props.timerType + 1\r\n        } else {\r\n          nextIndex = 1\r\n        }\r\n        \r\n        this.props.setTimerType(\r\n          nextIndex\r\n        );\r\n        this.props.setTimeLeft(\r\n          this.props.timerList[nextIndex-1].length\r\n        );\r\n      }\r\n      this.props.setTimerID(this.clockInterval());\r\n    }, 1000 / 60);\r\n    return timerID;\r\n  };\r\n\r\n  startStop(e = 0) {\r\n    let status = this.props.timerStatus;\r\n\r\n    if (status === 0) {\r\n      let timerID = this.clockInterval();\r\n      this.props.setTimerID(timerID);\r\n\r\n      this.props.setTimerStatus(1);\r\n    } else {\r\n      clearTimeout(this.props.timerID);\r\n      this.props.setTimerStatus(0);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.props.setTimerType(1);\r\n    clearTimeout(this.props.timerID);\r\n    let items = Array.from(this.props.timerList);\r\n    items = items.map((item, index) => {\r\n      const newItem = { ...item };\r\n      newItem.order = index + 1\r\n      return newItem\r\n    });\r\n    this.props.setTimerList(items)\r\n    this.props.setTimeLeft(items[0].length);\r\n\r\n    this.audioBeep.pause();\r\n    this.audioBeep.currentTime = 0;\r\n    this.props.setTimerStatus(0);\r\n  }\r\n\r\n  timerLabel() {\r\n    const timers = [...this.props.timerList];\r\n    const label = timers.find((item) => {\r\n      if (item.order === this.props.timerType) {\r\n        return item;\r\n      }\r\n      return null;\r\n    });\r\n    return label.name;\r\n  }\r\n\r\n  duration() {\r\n    const timers = [...this.props.timerList];\r\n\r\n    const length = timers.find((item) => {\r\n      if (item.order === this.props.timerType) {\r\n        return item;\r\n      }\r\n      return null;\r\n    });\r\n\r\n    return length.length * 1000;\r\n  }\r\n\r\n  buzzer(_timer) {\r\n    if (_timer <= 0) {\r\n      this.audioBeep.play();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DisplayContainer size={size}>\r\n        <div style={wrapperStyle}>\r\n          <svg\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            preserveAspectRatio=\"xMinYMin slice\"\r\n            viewBox=\"0 0 100 100\"\r\n            xmlns=\"https://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d={path}\r\n              stroke=\"grey\"\r\n              strokeLinecap=\"round\"\r\n              cx={size / 2}\r\n              cy={size / 2}\r\n              r={size / 2 - 4}\r\n              strokeWidth={strokeWidth}\r\n              fill=\"none\"\r\n            />\r\n            <path\r\n              d={path}\r\n              stroke=\"red\"\r\n              strokeLinecap=\"round\"\r\n              cx={size / 2}\r\n              cy={size / 2}\r\n              r={size / 2 - 4}\r\n              fill=\"none\"\r\n              strokeWidth={strokeWidth}\r\n              strokeDasharray={pathLength}\r\n              strokeDashoffset={strokeDashoffset(\r\n                this.props.timeLeft * 1000,\r\n                0,\r\n                pathLength,\r\n                this.duration()\r\n              )}\r\n            />\r\n          </svg>\r\n\r\n          <div style={timeStyle}>\r\n            <div id=\"timer-label\">{this.timerLabel()}</div>\r\n            <TimeFormat id=\"time-left\">\r\n              {displayTimeMMSS(this.props.timeLeft)}\r\n            </TimeFormat>\r\n            <StyledRow>\r\n              <StyledButton\r\n                variant=\"primary\"\r\n                id=\"start_stop\"\r\n                onClick={this.startStop}\r\n              >\r\n                {this.props.timerStatus === 1 ? (\r\n                  <i className=\"fas fa-stop fa-sm\"></i>\r\n                ) : (\r\n                  <i className=\"fas fa-play fa-sm\"></i>\r\n                )}\r\n              </StyledButton>\r\n              <StyledButton variant=\"primary\" id=\"reset\" onClick={this.reset}>\r\n                <i className=\"fas fa-undo fa-sm\"></i>\r\n              </StyledButton>\r\n            </StyledRow>\r\n          </div>\r\n        </div>\r\n        <audio\r\n          id=\"beep\"\r\n          preload=\"auto\"\r\n          ref={(audio) => {\r\n            this.audioBeep = audio;\r\n          }}\r\n          //src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n          src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/African%20and%20Eastern%20Percussion/80[kb]african-pe-hi.wav.mp3\"\r\n        ></audio>\r\n      </DisplayContainer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ButtonContainer,\r\n} from \"./TimerSetting.elements.js\";\r\n\r\nconst AddSetting = (props) => {\r\n  return (\r\n    <ButtonContainer onClick={props.handleOnclick}>\r\n      <i className={props.icon}></i>\r\n      <div>{props.label}</div>\r\n    </ButtonContainer>\r\n\r\n  );\r\n};\r\n\r\nexport default AddSetting;\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { TimerControl } from \"./Component/TimerControl\";\r\nimport { DisplayTimer } from \"./Component/DisplayTimer\";\r\nimport AddSetting from \"./Component/AddSetting\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Layout,\r\n  StyledRow,\r\n  Paragraph,\r\n  SettingWrapper,\r\n  DisplayWrapper,\r\n} from \"./Component/TimerSetting.elements\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport uniqueId from \"lodash.uniqueid\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.defaultTimerList = [\r\n      {\r\n        id: uniqueId(\"id-\"),\r\n        name: \"Session\",\r\n        order: 1,\r\n        length: 25 * 60,\r\n        edit: false,\r\n      },\r\n      {\r\n        id: uniqueId(\"id-\"),\r\n        name: \"Break\",\r\n        order: 2,\r\n        length: 5 * 60,\r\n        edit: false,\r\n      },\r\n    ]\r\n\r\n    this.state = {\r\n      timeLeft: 1500,\r\n      breakLength: 300,\r\n      sessionLength: 1500,\r\n      timerStatus: 0,\r\n      timerType: 1,\r\n      timerID: 0,\r\n      timerList: this.defaultTimerList,\r\n      addStatus: 0,\r\n    };\r\n\r\n    this.setBreak = this.setBreak.bind(this);\r\n    this.setSession = this.setSession.bind(this);\r\n    this.setTimeLeft = this.setTimeLeft.bind(this);\r\n    this.setTimerStatus = this.setTimerStatus.bind(this);\r\n    this.setTimerType = this.setTimerType.bind(this);\r\n    this.setTimerID = this.setTimerID.bind(this);\r\n    this.setLength = this.setLength.bind(this);\r\n    this.setTimerList = this.setTimerList.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.setTimerItem = this.setTimerItem.bind(this);\r\n    this.addTimer = this.addTimer.bind(this);\r\n    this.setEdit = this.setEdit.bind(this);\r\n    this.resetTimerSetting = this.resetTimerSetting.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    let timerList = JSON.parse(localStorage.getItem('timerList'))\r\n    if (timerList === null) {\r\n      timerList = this.defaultTimerList\r\n    }\r\n    this.setState({ \r\n      timeLeft: timerList[0].length,\r\n      timerList: timerList})\r\n  }\r\n\r\n  addTimer() {\r\n    let defaultNewSetting = {\r\n      id: uniqueId(\"id-\"),\r\n      name: \"Session\",\r\n      order: this.state.timerList.length + 1,\r\n      length: 5 * 60,\r\n      edit: true,\r\n    };\r\n    const newList = [...this.state.timerList, defaultNewSetting]\r\n    this.setState((state) => ({\r\n      timerList: newList,\r\n    }));\r\n    localStorage.setItem('timerList', JSON.stringify(newList))\r\n  }\r\n  \r\n  resetTimerSetting() {\r\n    const timerList = this.defaultTimerList\r\n    this.setState({ \r\n      timeLeft: timerList[0].length,\r\n      timerList: timerList})\r\n    localStorage.clear();\r\n  }\r\n\r\n  setEdit(item) {\r\n    let timers = [...this.state.timerList];\r\n    let index = timers.findIndex((x) => x.id === item.id);\r\n    let newTimer = { ...timers[index] };\r\n    newTimer.edit = !item.edit;\r\n    timers[index] = newTimer;\r\n    this.setState({\r\n      timerList: timers,\r\n    });\r\n    localStorage.setItem('timerList', JSON.stringify(timers))\r\n  }\r\n\r\n  setTimerItem(modifiedItem) {\r\n    let timers = [...this.state.timerList];\r\n    const newBoxState = timers.map((item) => {\r\n      if (item.id === modifiedItem.id) {\r\n        item = { ...modifiedItem };\r\n      }\r\n      return item;\r\n    });\r\n    this.setState({\r\n      timerList: newBoxState,\r\n    });\r\n    localStorage.setItem('timerList', JSON.stringify(newBoxState))\r\n  }\r\n\r\n  setLength(id, time) {\r\n    let timers = [...this.state.timerList];\r\n    let index = timers.findIndex((item) => item.id === id);\r\n    let timer = { ...timers[index] };\r\n    timer.length = time;\r\n    timers[index] = timer;\r\n    this.setState({\r\n      timerList: timers,\r\n    });\r\n    localStorage.setItem('timerList', JSON.stringify(timers))\r\n  }\r\n\r\n  setBreak(e) {\r\n    this.setState({\r\n      breakLength: e,\r\n    });\r\n  }\r\n\r\n  setTimerList(e) {\r\n    this.setState({\r\n      timerList: e,\r\n    });\r\n    localStorage.setItem('timerList', JSON.stringify(e))\r\n  }\r\n\r\n  setSession(e) {\r\n    this.setState({\r\n      sessionLength: e,\r\n    });\r\n  }\r\n\r\n  setTimeLeft(e) {\r\n    this.setState((state, props) => ({\r\n      timeLeft: e,\r\n    }));\r\n  }\r\n\r\n  setTimerStatus(e) {\r\n    this.setState({\r\n      timerStatus: e,\r\n    });\r\n  }\r\n\r\n  setTimerType(e) {\r\n    this.setState({\r\n      timerType: e,\r\n    });\r\n  }\r\n\r\n  setTimerID(e) {\r\n    this.setState({\r\n      timerID: e,\r\n    });\r\n  }\r\n\r\n  onDragEnd(result) {\r\n    const { source, destination } = result;\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    // reordering the list\r\n    let items = Array.from(this.state.timerList);\r\n\r\n    // update current time left\r\n    let order = 0;\r\n    if (destination.index + 1 === this.state.timerType) {\r\n      order = source.index + 1\r\n    }\r\n    if (source.index + 1 === this.state.timerType) {\r\n      order = destination.index + 1\r\n    }\r\n    \r\n    if (order !== 0) {\r\n      this.setState({\r\n        timerType: order,\r\n      })\r\n    }\r\n\r\n    const [reorderedItem] = items.splice(source.index, 1);\r\n    items.splice(destination.index, 0, reorderedItem);\r\n    items = items.map((item, index) => {\r\n      let newItem = {...item};\r\n      newItem.order = index + 1\r\n        return newItem\r\n    })\r\n\r\n    this.setState({\r\n      timerList: items,\r\n    });\r\n    localStorage.setItem('timerList', JSON.stringify(items))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <StyledRow>\r\n          <h1>Pomodoro</h1>\r\n        </StyledRow>\r\n        <StyledRow>\r\n          <Paragraph>- Kiet Lau -</Paragraph>\r\n        </StyledRow>\r\n        <StyledRow>\r\n          <Paragraph>\r\n            Podomoro timer built with ReactJS and styled-component\r\n          </Paragraph>\r\n        </StyledRow>\r\n\r\n        <DisplayWrapper>\r\n          <DisplayTimer\r\n            setTimeLeft={this.setTimeLeft}\r\n            setLength={this.setLength}\r\n            setTimerStatus={this.setTimerStatus}\r\n            setTimerType={this.setTimerType}\r\n            setTimerID={this.setTimerID}\r\n            setTimerList={this.setTimerList}\r\n            timerList={this.state.timerList}\r\n            timerStatus={this.state.timerStatus}\r\n            timeLeft={this.state.timeLeft}\r\n            timerType={this.state.timerType}\r\n            timerID={this.state.timerID}\r\n          ></DisplayTimer>\r\n        </DisplayWrapper>\r\n        <StyledRow>\r\n          <AddSetting label=\"Add Setting\" handleOnclick={this.addTimer} icon=\"fas fa-plus fa-sm\"></AddSetting>\r\n          <AddSetting label=\"Reset Setting\" handleOnclick={this.resetTimerSetting} icon=\"fas fa-edit fa-sx\"></AddSetting>\r\n        </StyledRow>\r\n        <StyledRow>\r\n          <DragDropContext onDragEnd={this.onDragEnd}>\r\n            <Droppable droppableId=\"timerSettings\" direction=\"vertical\">\r\n              {(provided) => (\r\n                <SettingWrapper\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                >\r\n                  {this.state.timerList.length > 0 ? (\r\n                    this.state.timerList.map((item, index) => (\r\n                      <Draggable\r\n                        key={item.id}\r\n                        draggableId={item.id}\r\n                        index={index}\r\n                      >\r\n                        {(provided) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                          >\r\n                            <TimerControl\r\n                              item={item}\r\n                              setTimeLeft={this.setTimeLeft}\r\n                              setLength={this.setLength}\r\n                              setTimerStatus={this.setTimerStatus}\r\n                              setTimerType={this.setTimerType}\r\n                              setTimerID={this.setTimerID}\r\n                              setTimerList={this.setTimerList}\r\n                              setTimerItem={this.setTimerItem}\r\n                              timerList={this.state.timerList}\r\n                              timerStatus={this.state.timerStatus}\r\n                              timeLeft={this.state.timeLeft}\r\n                              timerType={this.state.timerType}\r\n                              timerID={this.state.timerID}\r\n                              setEdit={this.setEdit}\r\n                            ></TimerControl>\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    ))\r\n                  ) : (\r\n                    <div>Let's start adding timer</div>\r\n                  )}\r\n                  {provided.placeholder}\r\n                </SettingWrapper>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </StyledRow>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <script src=\"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\"></script>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}